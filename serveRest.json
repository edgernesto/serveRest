{
	"info": {
		"_postman_id": "ad57e9b8-b985-405e-a350-15f4c0e8fc33",
		"name": "ServeRest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20851014"
	},
	"item": [
		{
			"name": "Testes unitários",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "CT-1: Realizar Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json()\r",
											"pm.environment.set(\"token\", response.authorization.slice(7));\r",
											"\r",
											"pm.test(\"Login realizado com sucesso\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"contem mensagem\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"message\");\r",
											"});\r",
											"pm.test(\"contem token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"authorization\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{emailAdmin}}\",\r\n  \"password\": \"{{senhaAdmin}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-02: Realizar Login dados vazios",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Dados em branco\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"mensagem de email em branco\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"email não pode ficar em branco\");\r",
											"});\r",
											"pm.test(\"mensagem de senha em branco\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"password não pode ficar em branco\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"\",\r\n  \"password\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-03: Realizar Login dados invalidos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Nao autorizado\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"contem mensagem\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"message\");\r",
											"});\r",
											"pm.test(\"mensagem de email ou senha invalida\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Email e/ou senha inválidos\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{emailClient}}\",\r\n  \"password\": \"sdasdsad\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Usuários",
					"item": [
						{
							"name": "Cadastro",
							"item": [
								{
									"name": "CT-4: Cadastrar usuário",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Cadastro realizado com sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"contem mensagem\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"});\r",
													"pm.test(\"contem id\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"administrador\": \"false\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/usuarios",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": [
										{
											"name": "Email já existente",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Fulano da Silva\",\r\n  \"email\": \"beltrano@qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/usuarios",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "edb253ef-18fe-42a8-ab27-7d0b0a7f290b"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "53"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 16:57:20 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Este email já está sendo usado\"\n}"
										},
										{
											"name": "Sucesso",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Fulano da Silva\",\r\n  \"email\": \"ocara@qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/usuarios",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "2521f8e9-bd4b-4b47-a98b-644f419f15a2"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 16:58:33 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"IVzzUPVWKO6W10kd\"\n}"
										},
										{
											"name": "Email vazio",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Fulano da Silva\",\r\n  \"email\": \"{{emailBranco}}\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/usuarios",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "aab3d637-a0b6-430f-bc88-daa2447d9a14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 16:59:28 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"email\": \"email não pode ficar em branco\"\n}"
										},
										{
											"name": "Senha vazia",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Fulano da Silva\",\r\n  \"email\": \"beltrano@qa.com.br\",\r\n  \"password\": \"{{senhaBranca}}\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/usuarios",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "1250aa55-2b56-46ee-a06a-c473dc4d4d4b"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "56"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:00:23 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"password\": \"password não pode ficar em branco\"\n}"
										}
									]
								},
								{
									"name": "CT-5: Email já existente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"erro de email ja existente\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"contem mensagem\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{emailAdmin}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/usuarios",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-6: Objeto vazio",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"mensagem de erro\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"mensagem de nome vazio\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"nome é obrigatório\");\r",
													"});\r",
													"pm.test(\"Mensagem de email vazio\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"email é obrigatório\");\r",
													"});\r",
													"pm.test(\"Mensagem de senha vazia\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"password é obrigatório\");\r",
													"});\r",
													"pm.test(\"Mensagem de adm vazio\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"administrador é obrigatório\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/usuarios",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Buscar usuário por ID",
							"item": [
								{
									"name": "CT-7: Buscar usuário por ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"body correto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"nome\");\r",
													"    pm.expect(pm.response.text()).to.include(\"email\");\r",
													"    pm.expect(pm.response.text()).to.include(\"password\");\r",
													"    pm.expect(pm.response.text()).to.include(\"administrador\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseURL}}/usuarios/{{adminID}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios",
												"{{adminID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-8: Nao existente/nao encontrado",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Mensagem de erro\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Usuário não encontrado\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseURL}}/usuarios/020fUOTATBxCvcb8",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios",
												"020fUOTATBxCvcb8"
											]
										}
									},
									"response": [
										{
											"name": "Sucesso",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseURL}}/usuarios/020fUOTATBxCvcb8",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"usuarios",
														"020fUOTATBxCvcb8"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "a823abd8-4697-43a4-82bb-2fff9aef16e2"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "153"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:07:27 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"nome\": \"Fulano da Silva\",\n    \"email\": \"beltrano@qa.com.br\",\n    \"password\": \"teste\",\n    \"administrador\": \"true\",\n    \"_id\": \"020fUOTATBxCvcb8\"\n}"
										},
										{
											"name": "nao existente/nao encontrado",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseURL}}/usuarios/{_id}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"usuarios",
														"{_id}"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "a65e01d6-00df-4d22-acb9-cd45cfb7d4c7"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "45"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:05:16 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Usuário não encontrado\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Excluir usuário",
							"item": [
								{
									"name": "CT-9: Excluir usuário",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseURL\") + \"/usuarios\",\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomFullName}}\"),\r",
													"            \"email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
													"            \"password\": pm.variables.replaceIn(\"{{$randomPassword}}\"),\r",
													"            \"administrador\": \"false\"\r",
													"        })\r",
													"    }\r",
													"\r",
													"}, (err, response) => {\r",
													"    pm.environment.set(\"userID\", response.json()._id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"usuário excluído\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/usuarios/{{userID}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios",
												"{{userID}}"
											]
										}
									},
									"response": [
										{
											"name": "Sucesso",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/usuarios/020fUOTATBxCvcb8",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"usuarios",
														"020fUOTATBxCvcb8"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "5b7f9dbb-7aa5-482a-a821-625af4d695d6"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "51"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:12:12 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Registro excluído com sucesso\"\n}"
										},
										{
											"name": "Id inválido",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/usuarios/{_id}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"usuarios",
														"{_id}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "147506f0-7162-41af-ba00-408f1ffd35a9"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "46"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:10:57 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Nenhum registro excluído\"\n}"
										}
									]
								},
								{
									"name": "CT-10: Id inválido",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"funcional\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Nenhum registro excluído\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/usuarios/ElUcUf3k7mAeILfZ",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios",
												"ElUcUf3k7mAeILfZ"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Editar usuário",
							"item": [
								{
									"name": "CT-11: Editar usuário",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Mensagem de sucesso\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{emailAdmin}}\",\r\n    \"password\": \"{{senhaAdmin}}\",\r\n    \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/usuarios/58dopDV2w8pGtVvI",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios",
												"58dopDV2w8pGtVvI"
											]
										}
									},
									"response": [
										{
											"name": "Usuário nao existente",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Fulano da Silva\",\r\n  \"email\": \"beltrano@qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/usuarios/{_id}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"usuarios",
														"{_id}"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "da509ef9-83ee-48c9-8635-417a5c3b9e1e"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:17:08 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"EjTFzjzc3BE5acGg\"\n}"
										},
										{
											"name": "Email já utilizado",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Fulano da Silva\",\r\n  \"email\": \"beltrano@qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/usuarios/020fUOTATBxCvcb8",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"usuarios",
														"020fUOTATBxCvcb8"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "0af53819-ef93-4766-bdf0-1d6ea4108f91"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "53"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:18:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Este email já está sendo usado\"\n}"
										},
										{
											"name": "Sucesso",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"jonas da Silva\",\r\n  \"email\": \"beltrano@qa.com.br\",\r\n  \"password\": \"outra\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/usuarios/EjTFzjzc3BE5acGg",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"usuarios",
														"EjTFzjzc3BE5acGg"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "93cfec4b-3102-4ca5-a45a-65d1e29e16c6"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:23:23 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Registro alterado com sucesso\"\n}"
										}
									]
								},
								{
									"name": "CT-12: Email já utilizado",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"status 400 correto\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Mensagem de erro correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"Trevor Lakin\",\r\n    \"email\": \"{{emailAdmin}}\",\r\n    \"password\": \"{{senhaAdmin}}\",\r\n    \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/usuarios/1yAmqmasu4qk7RHR",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios",
												"1yAmqmasu4qk7RHR"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-13: Usuário nao existente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"status 201 created\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"messagem de cadastro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{$randomPassword}}\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/usuarios/oashfkfsdahHH",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios",
												"oashfkfsdahHH"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Listar usuários cadastrados",
							"item": [
								{
									"name": "CT-14: Listar usuários cadastrados",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"lista de usuários\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"quantidade\");\r",
													"    pm.expect(pm.response.text()).to.include(\"usuarios\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/usuarios",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": [
										{
											"name": "Lista de usuários",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/usuarios",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "27ededfe-3273-467b-8c56-69b74665ae95"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "465"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 12:27:19 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"quantidade\": 2,\n    \"usuarios\": [\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"fulano@qa.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"0uxuPY0cbmQhpEz1\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"beltrano@qa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"false\",\n            \"_id\": \"MsG5o7LMAX0Ze1yB\"\n        }\n    ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Produtos",
					"item": [
						{
							"name": "Listar produtos cadastrados",
							"item": [
								{
									"name": "CT-15: Listar produtos cadastrados",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Lista de produtos\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"quantidade\");\r",
													"    pm.expect(pm.response.text()).to.include(\"produtos\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/produtos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": [
										{
											"name": "Lista de produtos",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/produtos",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "61b3269d-c33e-420d-902e-76725e75b452"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "618"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 12:26:42 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"quantidade\": 3,\n    \"produtos\": [\n        {\n            \"nome\": \"Logitech MX Vertical\",\n            \"preco\": 470,\n            \"descricao\": \"rato\",\n            \"quantidade\": 382,\n            \"_id\": \"BeeJh5lz3k6kSIzA\"\n        },\n        {\n            \"nome\": \"MX Vertical\",\n            \"preco\": 470,\n            \"descricao\": \"rato\",\n            \"quantidade\": 381,\n            \"_id\": \"JkqQ8AeynK5D6nTV\"\n        },\n        {\n            \"nome\": \"Samsung 60 polegadas\",\n            \"preco\": 5240,\n            \"descricao\": \"TV\",\n            \"quantidade\": 49977,\n            \"_id\": \"K6leHdftCeOJj8BJ\"\n        }\n    ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Cadastrar produto",
							"item": [
								{
									"name": "CT-16: Cadastrar produto",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomPhoneNumber}}\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"{{$randomProductAdjective}}\",\r\n  \"quantidade\": 381\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/produtos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": [
										{
											"name": "Sucesso",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Logitech MX\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"Mouse\",\r\n  \"quantidade\": 381\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/produtos",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "ab1b52f5-00c3-4a63-a482-0b1cdfab20fc"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:30:00 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"cSp1jyqfU27NmVFK\"\n}"
										},
										{
											"name": "Token ausente/expirado",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Logitech MX Vertical\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"Mouse\",\r\n  \"quantidade\": 381\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/produtos",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "3e2cca00-95eb-4280-9b37-9be86e49edcc"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "103"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:28:11 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
										},
										{
											"name": "Nome igual",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Logitech MX Vertical\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"Mouse\",\r\n  \"quantidade\": 381\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/produtos",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "4432052d-e354-4ecd-90ef-1aaed7622b8a"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "53"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:29:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Já existe produto com esse nome\"\n}"
										},
										{
											"name": "Exclusivo para Administrador",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Logitech MX\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"Mouse\",\r\n  \"quantidade\": 381\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/produtos",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "87f03f60-c91e-47e6-b664-74fd58f20108"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "56"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:33:47 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Rota exclusiva para administradores\"\n}"
										}
									]
								},
								{
									"name": "CT-17: Token ausente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"erro token ausente\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"{{$randomProductAdjective}}\",\r\n  \"quantidade\": 381\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/produtos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-18: Nome igual",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"erro produto ja existe\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Já existe produto com esse nome\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Logitech MX Vertical\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"Mouse\",\r\n  \"quantidade\": 381\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/produtos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-19:Exclusivo para Administrador",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"exclusivo para Adm\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"pm.test(\"mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Rota exclusiva para administradores\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailClient\"),\r",
													"            \"password\": pm.environment.get(\"senhaClient\"),\r",
													"        })\r",
													"    }\r",
													"}\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomProductName}}\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"Mouse\",\r\n  \"quantidade\": 381\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/produtos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Buscar produto por ID",
							"item": [
								{
									"name": "CT-20: Buscar produto por ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Body do produto selecionado\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"nome\");\r",
													"    pm.expect(pm.response.text()).to.include(\"preco\");\r",
													"    pm.expect(pm.response.text()).to.include(\"descricao\");\r",
													"    pm.expect(pm.response.text()).to.include(\"quantidade\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"const createProductRequest = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\" + \"2\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(createProductRequest, (err, response) => {\r",
													"        pm.environment.set(\"productID\", response.json()._id);\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/produtos/{{productID}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos",
												"{{productID}}"
											]
										}
									},
									"response": [
										{
											"name": "Sucesso",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/produtos/BeeJh5lz3k6kSIzA",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos",
														"BeeJh5lz3k6kSIzA"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "7f2adb11-c92a-4500-bd1e-ccf5b91da7f1"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "136"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:37:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"nome\": \"Logitech MX Vertical\",\n    \"preco\": 470,\n    \"descricao\": \"Mouse\",\n    \"quantidade\": 382,\n    \"_id\": \"BeeJh5lz3k6kSIzA\"\n}"
										},
										{
											"name": "Nao existente/nao encontrado",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/produtos/aaeedd",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos",
														"aaeedd"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "c2a39177-b0f9-4c85-b802-5decaaa9e56e"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "44"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:38:16 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Produto não encontrado\"\n}"
										}
									]
								},
								{
									"name": "CT-21: Produto nao encontrado",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Nao existente/ nao encontrado\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Body do produto selecionado\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Produto não encontrado\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/produtos/Diiakfnnf",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos",
												"Diiakfnnf"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Excluir produto",
							"item": [
								{
									"name": "CT-22: Excluir produto",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"const createProductRequest = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(createProductRequest, (err, response) => {\r",
													"        pm.environment.set(\"productID\", response.json()._id);\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/produtos/{{productID}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos",
												"{{productID}}"
											]
										}
									},
									"response": [
										{
											"name": "Token ausente",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/produtos/{_id}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos",
														"{_id}"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "4786d62b-2336-4354-b301-48ed53515a67"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "103"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:48:00 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
										},
										{
											"name": "Sucesso",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/produtos/cSp1jyqfU27NmVFK",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos",
														"cSp1jyqfU27NmVFK"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "3c67eaff-e5e4-4148-bc36-c72ee13416f6"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "51"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:50:16 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Registro excluído com sucesso\"\n}"
										},
										{
											"name": "Produto inexistente",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/produtos/cSp1jyqfU27NmVFK",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos",
														"cSp1jyqfU27NmVFK"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "6b9a5685-a966-42a9-bc01-039f5dcc1da9"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "46"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:51:02 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Nenhum registro excluído\"\n}"
										},
										{
											"name": "Exclusivo para Administrador",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/produtos/K6leHdftCeOJj8BJ",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos",
														"K6leHdftCeOJj8BJ"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "ef77320c-ea03-43f0-8ced-b2eb5e05868a"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "56"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 17:53:23 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Rota exclusiva para administradores\"\n}"
										},
										{
											"name": "Produto está em um carrinho",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/produtos/JkqQ8AeynK5D6nTV",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos",
														"JkqQ8AeynK5D6nTV"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "eeff5030-6319-4cbf-a308-900ccc5bdd08"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "135"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 13:25:30 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Não é permitido excluir produto que faz parte de carrinho\",\n    \"idCarrinhos\": [\n        \"GWvHaX06xoe05mAu\"\n    ]\n}"
										}
									]
								},
								{
									"name": "CT-23: token ausente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Token ausente\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"const createProductRequest = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(createProductRequest, (err, response) => {\r",
													"        pm.environment.set(\"productID\", response.json()._id);\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/produtos/{{productID}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos",
												"{{productID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-24: Produto inexistente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Funcional\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Nenhum registro excluído\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"const createProductRequest = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(createProductRequest, (err, response) => {\r",
													"        pm.environment.set(\"productID\", response.json()._id);\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/produtos/JkqQ8ANnnsoOo",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos",
												"JkqQ8ANnnsoOo"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-25: Exclusivo para Administrador",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Exclusivo para ADM\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Rota exclusiva para administradores\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailClient\"),\r",
													"            \"password\": pm.environment.get(\"senhaClient\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"const createProductRequest = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(createProductRequest, (err, response) => {\r",
													"        pm.environment.set(\"productID\", response.json()._id);\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/produtos/{{productID}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos",
												"{{productID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-26: Produto está em um carrinho",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"}\r",
													"const delCarrinhoRequest = {\r",
													"    url: pm.environment.get(\"baseURL\") + \"/carrinhos/cancelar-compra\",\r",
													"    method: 'DELETE',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    }\r",
													"}\r",
													"const criarProduto = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\" + \"2\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"}\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(delCarrinhoRequest, (err, response) => {\r",
													"        pm.sendRequest(criarProduto, (err, response) => {\r",
													"            pm.environment.set(\"productID\", response.json()._id);\r",
													"            pm.sendRequest({\r",
													"                url: `${url}/carrinhos`,\r",
													"                method: 'POST',\r",
													"                header: {\r",
													"                    'Content-Type': 'application/json',\r",
													"                    'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"                },\r",
													"                body: {\r",
													"                    mode: 'raw',\r",
													"                    raw: JSON.stringify({\r",
													"                        \"produtos\": [\r",
													"                            {\r",
													"                                \"idProduto\": pm.environment.get(\"productID\"),\r",
													"                                \"quantidade\": 1\r",
													"                            }\r",
													"                        ]\r",
													"                    })\r",
													"                }\r",
													"            }, (err, response) => {\r",
													"                pm.environment.set(\"carrinhoID\", response.json()._id);\r",
													"            });\r",
													"        });\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Codigo de erro correto\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Não é permitido excluir produto que faz parte de carrinho\");\r",
													"    pm.expect(pm.response.text()).to.include(\"idCarrinhos\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/produtos/{{productID}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos",
												"{{productID}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Editar produto",
							"item": [
								{
									"name": "CT-27: Editar produto",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"const createProductRequest = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\" + \"2\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(createProductRequest, (err, response) => {\r",
													"        pm.environment.set(\"productID\", response.json()._id);\r",
													"        pm.sendRequest({\r",
													"            url: `${url}/produtos/` + pm.environment.get(\"productID\"),\r",
													"            method: 'GET',\r",
													"            header: {\r",
													"                'Content-Type': 'application/json'\r",
													"            },\r",
													"\r",
													"        }, (err, response) => {\r",
													"            pm.environment.set(\"nomeProduto\", response.json().nome);\r",
													"            pm.environment.set(\"precoProduto\", response.json().preco);\r",
													"            pm.environment.set(\"descProduto\", response.json().descricao);\r",
													"        });\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Possui mensagem\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"{{nomeProduto}}\",\r\n    \"preco\": \"{{precoProduto}}\",\r\n    \"descricao\": \"{{descProduto}}\",\r\n    \"quantidade\": \"{{$randomInt}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/produtos/{{productID}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos",
												"{{productID}}"
											]
										}
									},
									"response": [
										{
											"name": "Produto vazio",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/produtos/{_id}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos",
														"{_id}"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "bed0f54d-aa2f-4b0e-9354-64000d451d35"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "170"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 18:04:12 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"nome\": \"nome é obrigatório\",\n    \"preco\": \"preco é obrigatório\",\n    \"descricao\": \"descricao é obrigatório\",\n    \"quantidade\": \"quantidade é obrigatório\"\n}"
										},
										{
											"name": "Nome ja existente",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Logitech MX Vertical\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"Mouse\",\r\n  \"quantidade\": 381\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/produtos/{_id}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos",
														"{_id}"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "96c41f42-38e9-495d-a105-c9ac6736465e"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "53"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 18:05:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Já existe produto com esse nome\"\n}"
										},
										{
											"name": "produto inexistente",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"MX Vertical\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"rato\",\r\n  \"quantidade\": 381\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/produtos/0uxuPY0cbmQhpEz1",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos",
														"0uxuPY0cbmQhpEz1"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "c0a63ca0-55f5-4f3e-8d67-ca670521123a"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 18:06:36 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"JkqQ8AeynK5D6nTV\"\n}"
										},
										{
											"name": "Sucesso",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"nome\": \"Logitech MX Vertical\",\r\n    \"preco\": 470,\r\n    \"descricao\": \"rato\",\r\n    \"quantidade\": 382\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/produtos/BeeJh5lz3k6kSIzA",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"produtos",
														"BeeJh5lz3k6kSIzA"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "238ac6da-2859-469c-a0c2-efc44242a775"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "Date",
													"value": "Wed, 22 Jun 2022 18:09:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Registro alterado com sucesso\"\n}"
										}
									]
								},
								{
									"name": "CT-28: Produto vazio",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Produto vazio\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Body correto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"nome é obrigatório\");\r",
													"    pm.expect(pm.response.text()).to.include(\"preco é obrigatório\");\r",
													"    pm.expect(pm.response.text()).to.include(\"descricao é obrigatório\");\r",
													"    pm.expect(pm.response.text()).to.include(\"quantidade é obrigatório\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/produtos/BeeJh5lz3k6kSIzA",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos",
												"BeeJh5lz3k6kSIzA"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-29: Token ausente ou invalido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"nao autorizado\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Logitech MX Vertical\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"Mouse\",\r\n  \"quantidade\": 381\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/produtos/BeeJh5lz3k6kSIzA",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos",
												"BeeJh5lz3k6kSIzA"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-30: Produto inexistente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"criou novo produto\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"{{$randomPhoneNumber}}\",\r\n    \"preco\": 470,\r\n    \"descricao\": \"Mouse\",\r\n    \"quantidade\": 381\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/produtos/{_id}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos",
												"{_id}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Carrinho",
					"item": [
						{
							"name": "Listar carrinhos cadastrados",
							"item": [
								{
									"name": "CT-32: Listar carrinhos cadastrados",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Body Correto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"quantidade\");\r",
													"    pm.expect(pm.response.text()).to.include(\"carrinhos\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/carrinhos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": [
										{
											"name": "Lista de carrinhos",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/carrinhos",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "b6bb4140-d7e6-4705-b1f0-90b62217632a"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "595"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 12:34:08 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"quantidade\": 1,\n    \"carrinhos\": [\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 2,\n                    \"precoUnitario\": 470\n                },\n                {\n                    \"idProduto\": \"K6leHdftCeOJj8BJ\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 5240\n                }\n            ],\n            \"precoTotal\": 6180,\n            \"quantidadeTotal\": 3,\n            \"idUsuario\": \"oUb7aGkMtSEPf6BZ\",\n            \"_id\": \"qbMqntef4iTOwWfg\"\n        }\n    ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Cadastrar carrinho",
							"item": [
								{
									"name": "CT-33: Cadastrar carrinho",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"});\r",
													"pm.test(\"Body correto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseURL\") + \"/carrinhos/cancelar-compra\",\r",
													"    method: 'DELETE',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    }\r",
													"}, function (err, response) {\r",
													"    console.log(response.json());\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"}\r",
													"const criarProduto = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"}\r",
													"\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(criarProduto, (err, response) => {\r",
													"        pm.environment.set(\"productID\", response.json()._id);\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{productID}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/carrinhos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": [
										{
											"name": "Token ausente/expirado",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseURL}}/carrinhos",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "8a4e7cc7-672f-4636-a7ae-d4b6bf068b97"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "103"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 12:35:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
										},
										{
											"name": "Carrinho vazio",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/carrinhos",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "cca600f3-45da-4839-a465-d66f4cb2a99d"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "46"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 12:45:33 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"produtos\": \"produtos é obrigatório\"\n}"
										},
										{
											"name": "Produto nao encontrado",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"YaeJ455lz3k6kSIzA\",\r\n      \"quantidade\": 3\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/carrinhos",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "7d4487ed-9e4c-4e6c-9b77-52db52d816ed"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "151"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 12:46:52 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Produto não encontrado\",\n    \"item\": {\n        \"index\": 1,\n        \"idProduto\": \"YaeJ455lz3k6kSIzA\",\n        \"quantidade\": 3\n    }\n}"
										},
										{
											"name": "Sucesso",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"JkqQ8AeynK5D6nTV\",\r\n      \"quantidade\": 1\r\n    },\r\n    {   \r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 3\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/carrinhos",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "35e7330d-3a87-4490-b067-5ca9e322f804"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 12:48:57 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"lQDO06FHtZ2a9goR\"\n}"
										},
										{
											"name": "Carrinho duplicado",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"JkqQ8AeynK5D6nTV\",\r\n      \"quantidade\": 1\r\n    },\r\n    {   \r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 3\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/carrinhos",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "14c3d4c2-eafb-4b50-82cb-f3c9ccc409e2"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "61"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 12:51:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Não é permitido ter mais de 1 carrinho\"\n}"
										}
									]
								},
								{
									"name": "CT-34: Carrinho duplicado",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"nao pode ter mais de um carrinho\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Não é permitido ter mais de 1 carrinho\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"}\r",
													"const createProductRequest = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"};\r",
													"\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(createProductRequest, (err, response) => {\r",
													"        pm.environment.set(\"productID\", response.json()._id);\r",
													"        pm.sendRequest({\r",
													"            url: `${url}/carrinhos`,\r",
													"            method: 'POST',\r",
													"            header: {\r",
													"                'Content-Type': 'application/json',\r",
													"                'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"            },\r",
													"            body: {\r",
													"                mode: 'raw',\r",
													"                raw: JSON.stringify({\r",
													"                    \"produtos\": [\r",
													"                        {\r",
													"                            \"idProduto\": pm.environment.get(\"productID\"),\r",
													"                            \"quantidade\": 1\r",
													"                        }\r",
													"                    ]\r",
													"                })\r",
													"            }\r",
													"        });\r",
													"    });\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{productID}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/carrinhos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-35: Token ausente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"nao autorizado\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'aplication/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    console.log(err ? err : response.json());\r",
													"    try {\r",
													"        pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    } catch {\r",
													"        console.log(\"FAIL\");\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{productID}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/carrinhos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-36: Carrinho vazio",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"sem produtos no carrinho\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"produtos\");\r",
													"    pm.expect(pm.response.text()).to.include(\"produtos é obrigatório\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'aplication/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    console.log(err ? err : response.json());\r",
													"    try {\r",
													"        pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    } catch {\r",
													"        console.log(\"FAIL\");\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/carrinhos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-37: Produto nao encontrado",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"produto nao encontrado\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Produto não encontrado\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"const createProductRequest = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"};\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    console.log(err ? err : response.json());\r",
													"    try {\r",
													"        pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"\r",
													"        if (response.json().message !== \"\") {\r",
													"            pm.sendRequest({\r",
													"                url: pm.environment.get(\"baseURL\") + \"/carrinhos/cancelar-compra\",\r",
													"                method: 'DELETE',\r",
													"                header: {\r",
													"                    'Content-Type': 'application/json',\r",
													"                    'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"                }\r",
													"            })\r",
													"            pm.sendRequest(createProductRequest, (err, response) => {\r",
													"                console.log(err ? err : response.json());\r",
													"                try {\r",
													"                    pm.environment.set(\"productID\", response.json()._id);\r",
													"                } catch {\r",
													"                    console.log(\"FAIL\");\r",
													"                }\r",
													"            });\r",
													"        }\r",
													"    } catch {\r",
													"        console.log(\"FAIL\");\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kasdSIzA\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/carrinhos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Buscar carrinho por ID",
							"item": [
								{
									"name": "CT-38: Buscar carrinho por ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Body correto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"produtos\");\r",
													"    pm.expect(pm.response.text()).to.include(\"precoTotal\");\r",
													"    pm.expect(pm.response.text()).to.include(\"quantidadeTotal\");\r",
													"    pm.expect(pm.response.text()).to.include(\"idUsuario\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseURL\") + \"/carrinhos/cancelar-compra\",\r",
													"    method: 'DELETE',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    }\r",
													"}, function (err, response) {\r",
													"\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"}\r",
													"const criarProduto = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\" + \"1\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"}\r",
													"const criarCarrinho = {\r",
													"    url: `${url}/carrinhos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"produtos\": [\r",
													"                {\r",
													"                    \"idProduto\": pm.environment.get(\"productID\"),\r",
													"                    \"quantidade\": 1\r",
													"                }\r",
													"            ]\r",
													"        })\r",
													"    }\r",
													"}\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(criarProduto, (err, response) => {\r",
													"        pm.environment.set(\"productID\", response.json()._id);\r",
													"        pm.sendRequest(criarCarrinho, (err, response) => {\r",
													"            pm.environment.set(\"carrinhoID\", response.json()._id);\r",
													"        });\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/carrinhos/{{carrinhoID}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos",
												"{{carrinhoID}}"
											]
										}
									},
									"response": [
										{
											"name": "Nao encontrado/inexistente",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/carrinhos/{_id}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos",
														"{_id}"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "14c6b175-2a9b-4a82-93ec-4cb6ffebe27c"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "45"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 13:03:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Carrinho não encontrado\"\n}"
										},
										{
											"name": "Sucesso",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/carrinhos/lQDO06FHtZ2a9goR",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos",
														"lQDO06FHtZ2a9goR"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "b6ece1d9-26e4-4511-8f98-91f9d985127f"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "400"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 13:04:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"produtos\": [\n        {\n            \"idProduto\": \"JkqQ8AeynK5D6nTV\",\n            \"quantidade\": 1,\n            \"precoUnitario\": 470\n        },\n        {\n            \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n            \"quantidade\": 3,\n            \"precoUnitario\": 470\n        }\n    ],\n    \"precoTotal\": 1880,\n    \"quantidadeTotal\": 4,\n    \"idUsuario\": \"0uxuPY0cbmQhpEz1\",\n    \"_id\": \"lQDO06FHtZ2a9goR\"\n}"
										}
									]
								},
								{
									"name": "CT-39: Nao encontrado/inexistente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Carrinho nao encontrado\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Carrinho não encontrado\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"};\r",
													"\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/carrinhos/GWvHaX06xoe05mAu",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos",
												"GWvHaX06xoe05mAu"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Excluir carrinho concluir compra",
							"item": [
								{
									"name": "CT-40: Excluir carrinho concluir compra",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"}\r",
													"const criarProduto = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\"+\"1\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"}\r",
													"const criarCarrinho = {\r",
													"    url: `${url}/carrinhos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"produtos\": [\r",
													"                {\r",
													"                    \"idProduto\": pm.environment.get(\"productID\"),\r",
													"                    \"quantidade\": 1\r",
													"                }\r",
													"            ]\r",
													"        })\r",
													"    }\r",
													"}\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(criarProduto, (err, response) => {\r",
													"        pm.environment.set(\"productID\", response.json()._id);\r",
													"        pm.sendRequest(criarCarrinho, (err, response) => {\r",
													"        });\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Possui mensagem\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseURL}}/carrinhos/concluir-compra",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": [
										{
											"name": "Token inválido",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/carrinhos/concluir-compra",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos",
														"concluir-compra"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "a5fc8723-01fb-48ed-b8c3-2877a8eb9c12"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "103"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 13:06:21 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
										},
										{
											"name": "Sucesso",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/carrinhos/concluir-compra",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos",
														"concluir-compra"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "19aff6a6-7826-42dd-833b-101293bb2534"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "51"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 13:07:19 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Registro excluído com sucesso\"\n}"
										}
									]
								},
								{
									"name": "CT-41: Token inválido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Nao autorizado\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Body correto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"}\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/carrinhos/concluir-compra",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Excluir carrinho e retomar produtos para estoque",
							"item": [
								{
									"name": "CT-42: Excluir carrinho e retomar produtos para estoque",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Compra cancelada\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso. Estoque dos produtos reabastecido\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"}\r",
													"const criarProduto = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\" + \"2\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"}\r",
													"const criarCarrinho = {\r",
													"    url: `${url}/carrinhos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"produtos\": [\r",
													"                {\r",
													"                    \"idProduto\": pm.environment.get(\"productID\"),\r",
													"                    \"quantidade\": 1\r",
													"                }\r",
													"            ]\r",
													"        })\r",
													"    }\r",
													"}\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(criarProduto, (err, response) => {\r",
													"        pm.environment.set(\"productID\", response.json()._id);\r",
													"        pm.sendRequest(criarCarrinho, (err, response) => {\r",
													"            pm.environment.set(\"carrinhoID\", response.json()._id);\r",
													"        });\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/carrinhos/cancelar-compra",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos",
												"cancelar-compra"
											]
										}
									},
									"response": [
										{
											"name": "Token inválido",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/carrinhos/cancelar-compra",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos",
														"cancelar-compra"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "a2526388-3b88-42c9-a569-d2e4dc0b2e83"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "103"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 13:21:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
										},
										{
											"name": "Carrinho inexistente",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/carrinhos/cancelar-compra",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos",
														"cancelar-compra"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "eeace70b-0f7d-4732-b754-2992ff3c7460"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "68"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 13:22:01 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Não foi encontrado carrinho para esse usuário\"\n}"
										},
										{
											"name": "Sucesso",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/carrinhos/cancelar-compra",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"carrinhos",
														"cancelar-compra"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "x-moesif-transaction-id",
													"value": "db82847d-a1e2-46ab-be14-8bd54871987b"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "86"
												},
												{
													"key": "Date",
													"value": "Thu, 23 Jun 2022 13:22:57 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Registro excluído com sucesso. Estoque dos produtos reabastecido\"\n}"
										}
									]
								},
								{
									"name": "CT-43: Token inválido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Nao autorizado\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"}\r",
													"const criarProduto = {\r",
													"    url: `${url}/produtos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"nome\": pm.variables.replaceIn(\"{{$randomProductName}}\"),\r",
													"            \"preco\": 470,\r",
													"            \"descricao\": pm.variables.replaceIn(\"{{$randomProductAdjective}}\"),\r",
													"            \"quantidade\": 381\r",
													"        })\r",
													"    }\r",
													"}\r",
													"const criarCarrinho = {\r",
													"    url: `${url}/carrinhos`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"produtos\": [\r",
													"                {\r",
													"                    \"idProduto\": pm.environment.get(\"productID\"),\r",
													"                    \"quantidade\": 1\r",
													"                }\r",
													"            ]\r",
													"        })\r",
													"    }\r",
													"}\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(criarProduto, (err, response) => {\r",
													"        pm.environment.set(\"productID\", response.json()._id);\r",
													"        pm.sendRequest(criarCarrinho, (err, response) => {\r",
													"            pm.environment.set(\"carrinhoID\", response.json()._id);\r",
													"        });\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/carrinhos/cancelar-compra",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos",
												"cancelar-compra"
											]
										}
									},
									"response": []
								},
								{
									"name": "CT-44: Carrinho inexistente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Carrinho inexistente\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Não foi encontrado carrinho para esse usuário\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const url = pm.environment.get(\"baseURL\");\r",
													"const loginRequest = {\r",
													"    url: `${url}/login`,\r",
													"    method: 'POST',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json'\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({\r",
													"            \"email\": pm.environment.get(\"emailAdmin\"),\r",
													"            \"password\": pm.environment.get(\"senhaAdmin\")\r",
													"        })\r",
													"    }\r",
													"}\r",
													"const delCarrinhoRequest = {\r",
													"    url: pm.environment.get(\"baseURL\") + \"/carrinhos/cancelar-compra\",\r",
													"    method: 'DELETE',\r",
													"    header: {\r",
													"        'Content-Type': 'application/json',\r",
													"        'Authorization': 'Bearer ' + pm.environment.get(\"token\")\r",
													"    }\r",
													"}\r",
													"pm.sendRequest(loginRequest, (err, response) => {\r",
													"    pm.environment.set(\"token\", response.json().authorization.slice(7));\r",
													"    pm.sendRequest(delCarrinhoRequest, (err, response) => {\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/carrinhos/cancelar-compra",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos",
												"cancelar-compra"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Fluxos",
			"item": [
				{
					"name": "Administrador",
					"item": [
						{
							"name": "Concluir compra",
							"item": [
								{
									"name": "Cadastrar usuário",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"pm.environment.set(\"userID\", response._id);\r",
													"\r",
													"pm.test(\"Cadastro realizado com sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"contem mensagem\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"});\r",
													"pm.test(\"contem id\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/usuarios",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "Realizar Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json()\r",
													"pm.environment.set(\"token\", response.authorization.slice(7));\r",
													"\r",
													"pm.test(\"Login realizado com sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"contem mensagem\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"});\r",
													"pm.test(\"contem token\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"authorization\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseURL\") + \"/usuarios/\" + pm.environment.get(\"userID\"),\r",
													"    method: 'GET',\r",
													"}, (err, response) => {\r",
													"    pm.environment.set(\"email\", response.json().email);\r",
													"    pm.environment.set(\"senha\", response.json().password);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\":\"{{email}}\",\r\n  \"password\": \"{{senha}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Cadastrar produto",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json()\r",
													"pm.environment.set(\"productID\", response._id);\r",
													"\r",
													"pm.test(\"Sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomPhoneNumber}}\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"{{$randomNoun}}\",\r\n  \"quantidade\": 381\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/produtos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Cadastrar carrinho",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"carrinho criado com sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"});\r",
													"pm.test(\"Body correto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{productID}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/carrinhos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Concluir compra",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Compra concluída\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/carrinhos/concluir-compra",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Cancelar compra",
							"item": [
								{
									"name": "Cadastrar usuário",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"pm.environment.set(\"userID\", response._id);\r",
													"\r",
													"pm.test(\"Cadastro realizado com sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"contem mensagem\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"});\r",
													"pm.test(\"contem id\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/usuarios",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "Realizar Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json()\r",
													"pm.environment.set(\"token\", response.authorization.slice(7));\r",
													"\r",
													"pm.test(\"Login realizado com sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"contem mensagem\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"});\r",
													"pm.test(\"contem token\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"authorization\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseURL\") + \"/usuarios/\" + pm.environment.get(\"userID\"),\r",
													"    method: 'GET',\r",
													"}, (err, response) => {\r",
													"    pm.environment.set(\"email\", response.json().email);\r",
													"    pm.environment.set(\"senha\", response.json().password);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\":\"{{email}}\",\r\n  \"password\": \"{{senha}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Cadastrar produto",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json()\r",
													"pm.environment.set(\"productID\", response._id);\r",
													"\r",
													"pm.test(\"Sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"{{$randomPhoneNumber}}\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"{{$randomNoun}}\",\r\n  \"quantidade\": 381\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/produtos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Cadastrar carrinho",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"carrinho criado com sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"});\r",
													"pm.test(\"Body correto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{productID}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/carrinhos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Cancelar compra",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Compra cancelada\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/carrinhos/cancelar-compra",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos",
												"cancelar-compra"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Cliente",
					"item": [
						{
							"name": "Concluir compra",
							"item": [
								{
									"name": "Cadastrar usuário",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"pm.environment.set(\"userID\", response._id);\r",
													"\r",
													"pm.test(\"Cadastro realizado com sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"contem mensagem\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"});\r",
													"pm.test(\"contem id\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"administrador\": \"false\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/usuarios",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "Realizar Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json()\r",
													"pm.environment.set(\"token\", response.authorization.slice(7));\r",
													"\r",
													"pm.test(\"Login realizado com sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"contem mensagem\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"});\r",
													"pm.test(\"contem token\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"authorization\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseURL\") + \"/usuarios/\" + pm.environment.get(\"userID\"),\r",
													"    method: 'GET',\r",
													"}, (err, response) => {\r",
													"    pm.environment.set(\"email\", response.json().email);\r",
													"    pm.environment.set(\"senha\", response.json().password);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\":\"{{email}}\",\r\n  \"password\": \"{{senha}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Cadastrar carrinho",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"carrinho criado com sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"});\r",
													"pm.test(\"Body correto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseURL\") + \"/produtos\",\r",
													"    method: 'GET',\r",
													"}, (err, response) => {\r",
													"    pm.environment.set(\"productIDs\", response.json().produtos.map(item => item._id));\r",
													"    pm.environment.set(\"productID\", response.json().produtos[0]._id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{productID}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/carrinhos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Concluir compra",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Compra concluída\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/carrinhos/concluir-compra",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Cancelar compra",
							"item": [
								{
									"name": "Cadastrar usuário",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"pm.environment.set(\"userID\", response._id);\r",
													"\r",
													"pm.test(\"Cadastro realizado com sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"contem mensagem\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"});\r",
													"pm.test(\"contem id\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"administrador\": \"false\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/usuarios",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": []
								},
								{
									"name": "Realizar Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json()\r",
													"pm.environment.set(\"token\", response.authorization.slice(7));\r",
													"\r",
													"pm.test(\"Login realizado com sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"contem mensagem\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"});\r",
													"pm.test(\"contem token\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"authorization\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseURL\") + \"/usuarios/\" + pm.environment.get(\"userID\"),\r",
													"    method: 'GET',\r",
													"}, (err, response) => {\r",
													"    pm.environment.set(\"email\", response.json().email);\r",
													"    pm.environment.set(\"senha\", response.json().password);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\":\"{{email}}\",\r\n  \"password\": \"{{senha}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/login",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Cadastrar carrinho",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"carrinho criado com sucesso\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"Mensagem correta\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"});\r",
													"pm.test(\"Body correto\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"message\");\r",
													"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseURL\") + \"/produtos\",\r",
													"    method: 'GET',\r",
													"}, (err, response) => {\r",
													"    pm.environment.set(\"productIDs\", response.json().produtos.map(item => item._id));\r",
													"    pm.environment.set(\"productID\", response.json().produtos[0]._id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{productID}}\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/carrinhos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Excluir carrinho e retomar produtos para estoque",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"carrinho excluído com sucesso\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/carrinhos/cancelar-compra",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"carrinhos",
												"cancelar-compra"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.environment.unset(\"variable_key\");",
					"pm.globals.unset(\"variable_key\");",
					"pm.collectionVariables.unset(\"variable_key\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}